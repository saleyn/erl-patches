From fbc9abe66d3debb8c4e8ec3076a12b7d244b38e3 Mon Sep 17 00:00:00 2001
From: Serge Aleynikov <saleyn@gmail.com>
Date: Sat, 14 Feb 2015 17:19:17 -0500
Subject: [PATCH] Add ?assertReceive(Guard, Timeout) macro to eunit

A convenience macro used for testing message passing logic by allowing
to fail if a message matching a `Guard` is not received in the mailbox
of the current process.
---
 lib/eunit/doc/overview.edoc | 15 +++++++++++++++
 lib/eunit/include/eunit.hrl | 20 ++++++++++++++++++++
 2 files changed, 35 insertions(+)

diff --git a/lib/eunit/doc/overview.edoc b/lib/eunit/doc/overview.edoc
index 872a017..c021062 100644
--- a/lib/eunit/doc/overview.edoc
+++ b/lib/eunit/doc/overview.edoc
@@ -569,6 +569,21 @@ Examples:
 ```?assertMatch({found, {fred, _}}, lookup(bloggs, Table))'''
 ```?assertMatch([X|_] when X > 0, binary_to_list(B))'''
 </dd>
+<dt>`assertReceive(GuardedPattern, Timeout)'</dt>
+<dd>Waits for up to the `Timeout' milliseconds for a message to arrive
+in the mailbox of the current process that matches against the
+`GuardedPattern' if testing is enabled.
+If no message matching the `GuardedPattern' is received in the specified
+`Timeout' interval, the assertion fails and an informative exception will
+be generated; see the `assert' macro for further details. `GuardedPattern'
+can be anything that you can write on the left hand side of the `->'
+symbol in a case-clause, except that it cannot contain comma-separated
+guard tests.
+
+Examples:
+```?assertReceive(done, 1000)'''
+```?assertReceive(Bin when byte_size(Bin) > 10, 1000)'''
+</dd>
 <dt>`assertEqual(Expect, Expr)'</dt>
 <dd>Evaluates the expressions `Expect' and `Expr' and compares the
 results for equality, if testing is enabled. If the values are not
diff --git a/lib/eunit/include/eunit.hrl b/lib/eunit/include/eunit.hrl
index 9e8d345..26ca8f8 100644
--- a/lib/eunit/include/eunit.hrl
+++ b/lib/eunit/include/eunit.hrl
@@ -166,6 +166,26 @@
 %% This is mostly a convenience which gives more detailed reports.
 %% Note: Guard is a guarded pattern, and can not be used for value.
 -ifdef(NOASSERT).
+-define(assertReceive(Guard, Timeout), ok).
+-else.
+-define(assertReceive(Guard, Timeout),
+	begin
+	((fun () ->
+	    receive (Guard) -> ok
+	    after Timeout -> erlang:error({assertReceive_timedout,
+					   [{module, ?MODULE},
+					    {line, ?LINE},
+					    {pattern, (??Guard)},
+					    {timeout, Timeout}]})
+	    end
+	  end)())
+	end).
+-endif.
+-define(_assertReceive(Guard, Timeout), ?_test(?assertReceive(Guard, Timeout))).
+
+%% This is mostly a convenience which gives more detailed reports.
+%% Note: Guard is a guarded pattern, and can not be used for value.
+-ifdef(NOASSERT).
 -define(assertMatch(Guard, Expr), ok).
 -else.
 -define(assertMatch(Guard, Expr),
-- 
2.1.2

